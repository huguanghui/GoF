# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.5

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /root/GIT/GOF

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /root/GIT/GOF/build/debug

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	/usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# The main all target
all: cmake_check_build_system
	cd /root/GIT/GOF/build/debug && $(CMAKE_COMMAND) -E cmake_progress_start /root/GIT/GOF/build/debug/CMakeFiles /root/GIT/GOF/build/debug/code_cpp/AbstractFactory/CMakeFiles/progress.marks
	cd /root/GIT/GOF/build/debug && $(MAKE) -f CMakeFiles/Makefile2 code_cpp/AbstractFactory/all
	$(CMAKE_COMMAND) -E cmake_progress_start /root/GIT/GOF/build/debug/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f CMakeFiles/Makefile2 code_cpp/AbstractFactory/clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /root/GIT/GOF/build/debug && $(MAKE) -f CMakeFiles/Makefile2 code_cpp/AbstractFactory/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f CMakeFiles/Makefile2 code_cpp/AbstractFactory/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /root/GIT/GOF/build/debug && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/rule:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f CMakeFiles/Makefile2 code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/rule
.PHONY : code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/rule

# Convenience name for target.
abs_factory: code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/rule

.PHONY : abs_factory

# fast build rule for target.
abs_factory/fast:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build
.PHONY : abs_factory/fast

AbstractFactory.o: AbstractFactory.cpp.o

.PHONY : AbstractFactory.o

# target to build an object file
AbstractFactory.cpp.o:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/AbstractFactory.cpp.o
.PHONY : AbstractFactory.cpp.o

AbstractFactory.i: AbstractFactory.cpp.i

.PHONY : AbstractFactory.i

# target to preprocess a source file
AbstractFactory.cpp.i:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/AbstractFactory.cpp.i
.PHONY : AbstractFactory.cpp.i

AbstractFactory.s: AbstractFactory.cpp.s

.PHONY : AbstractFactory.s

# target to generate assembly for a file
AbstractFactory.cpp.s:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/AbstractFactory.cpp.s
.PHONY : AbstractFactory.cpp.s

AbstractProductA.o: AbstractProductA.cpp.o

.PHONY : AbstractProductA.o

# target to build an object file
AbstractProductA.cpp.o:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/AbstractProductA.cpp.o
.PHONY : AbstractProductA.cpp.o

AbstractProductA.i: AbstractProductA.cpp.i

.PHONY : AbstractProductA.i

# target to preprocess a source file
AbstractProductA.cpp.i:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/AbstractProductA.cpp.i
.PHONY : AbstractProductA.cpp.i

AbstractProductA.s: AbstractProductA.cpp.s

.PHONY : AbstractProductA.s

# target to generate assembly for a file
AbstractProductA.cpp.s:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/AbstractProductA.cpp.s
.PHONY : AbstractProductA.cpp.s

AbstractProductB.o: AbstractProductB.cpp.o

.PHONY : AbstractProductB.o

# target to build an object file
AbstractProductB.cpp.o:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/AbstractProductB.cpp.o
.PHONY : AbstractProductB.cpp.o

AbstractProductB.i: AbstractProductB.cpp.i

.PHONY : AbstractProductB.i

# target to preprocess a source file
AbstractProductB.cpp.i:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/AbstractProductB.cpp.i
.PHONY : AbstractProductB.cpp.i

AbstractProductB.s: AbstractProductB.cpp.s

.PHONY : AbstractProductB.s

# target to generate assembly for a file
AbstractProductB.cpp.s:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/AbstractProductB.cpp.s
.PHONY : AbstractProductB.cpp.s

ConcreteFactory1.o: ConcreteFactory1.cpp.o

.PHONY : ConcreteFactory1.o

# target to build an object file
ConcreteFactory1.cpp.o:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ConcreteFactory1.cpp.o
.PHONY : ConcreteFactory1.cpp.o

ConcreteFactory1.i: ConcreteFactory1.cpp.i

.PHONY : ConcreteFactory1.i

# target to preprocess a source file
ConcreteFactory1.cpp.i:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ConcreteFactory1.cpp.i
.PHONY : ConcreteFactory1.cpp.i

ConcreteFactory1.s: ConcreteFactory1.cpp.s

.PHONY : ConcreteFactory1.s

# target to generate assembly for a file
ConcreteFactory1.cpp.s:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ConcreteFactory1.cpp.s
.PHONY : ConcreteFactory1.cpp.s

ConcreteFactory2.o: ConcreteFactory2.cpp.o

.PHONY : ConcreteFactory2.o

# target to build an object file
ConcreteFactory2.cpp.o:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ConcreteFactory2.cpp.o
.PHONY : ConcreteFactory2.cpp.o

ConcreteFactory2.i: ConcreteFactory2.cpp.i

.PHONY : ConcreteFactory2.i

# target to preprocess a source file
ConcreteFactory2.cpp.i:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ConcreteFactory2.cpp.i
.PHONY : ConcreteFactory2.cpp.i

ConcreteFactory2.s: ConcreteFactory2.cpp.s

.PHONY : ConcreteFactory2.s

# target to generate assembly for a file
ConcreteFactory2.cpp.s:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ConcreteFactory2.cpp.s
.PHONY : ConcreteFactory2.cpp.s

ProductA1.o: ProductA1.cpp.o

.PHONY : ProductA1.o

# target to build an object file
ProductA1.cpp.o:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ProductA1.cpp.o
.PHONY : ProductA1.cpp.o

ProductA1.i: ProductA1.cpp.i

.PHONY : ProductA1.i

# target to preprocess a source file
ProductA1.cpp.i:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ProductA1.cpp.i
.PHONY : ProductA1.cpp.i

ProductA1.s: ProductA1.cpp.s

.PHONY : ProductA1.s

# target to generate assembly for a file
ProductA1.cpp.s:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ProductA1.cpp.s
.PHONY : ProductA1.cpp.s

ProductA2.o: ProductA2.cpp.o

.PHONY : ProductA2.o

# target to build an object file
ProductA2.cpp.o:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ProductA2.cpp.o
.PHONY : ProductA2.cpp.o

ProductA2.i: ProductA2.cpp.i

.PHONY : ProductA2.i

# target to preprocess a source file
ProductA2.cpp.i:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ProductA2.cpp.i
.PHONY : ProductA2.cpp.i

ProductA2.s: ProductA2.cpp.s

.PHONY : ProductA2.s

# target to generate assembly for a file
ProductA2.cpp.s:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ProductA2.cpp.s
.PHONY : ProductA2.cpp.s

ProductB1.o: ProductB1.cpp.o

.PHONY : ProductB1.o

# target to build an object file
ProductB1.cpp.o:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ProductB1.cpp.o
.PHONY : ProductB1.cpp.o

ProductB1.i: ProductB1.cpp.i

.PHONY : ProductB1.i

# target to preprocess a source file
ProductB1.cpp.i:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ProductB1.cpp.i
.PHONY : ProductB1.cpp.i

ProductB1.s: ProductB1.cpp.s

.PHONY : ProductB1.s

# target to generate assembly for a file
ProductB1.cpp.s:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ProductB1.cpp.s
.PHONY : ProductB1.cpp.s

ProductB2.o: ProductB2.cpp.o

.PHONY : ProductB2.o

# target to build an object file
ProductB2.cpp.o:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ProductB2.cpp.o
.PHONY : ProductB2.cpp.o

ProductB2.i: ProductB2.cpp.i

.PHONY : ProductB2.i

# target to preprocess a source file
ProductB2.cpp.i:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ProductB2.cpp.i
.PHONY : ProductB2.cpp.i

ProductB2.s: ProductB2.cpp.s

.PHONY : ProductB2.s

# target to generate assembly for a file
ProductB2.cpp.s:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/ProductB2.cpp.s
.PHONY : ProductB2.cpp.s

main.o: main.cpp.o

.PHONY : main.o

# target to build an object file
main.cpp.o:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/main.cpp.o
.PHONY : main.cpp.o

main.i: main.cpp.i

.PHONY : main.i

# target to preprocess a source file
main.cpp.i:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/main.cpp.i
.PHONY : main.cpp.i

main.s: main.cpp.s

.PHONY : main.s

# target to generate assembly for a file
main.cpp.s:
	cd /root/GIT/GOF/build/debug && $(MAKE) -f code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/build.make code_cpp/AbstractFactory/CMakeFiles/abs_factory.dir/main.cpp.s
.PHONY : main.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... rebuild_cache"
	@echo "... abs_factory"
	@echo "... AbstractFactory.o"
	@echo "... AbstractFactory.i"
	@echo "... AbstractFactory.s"
	@echo "... AbstractProductA.o"
	@echo "... AbstractProductA.i"
	@echo "... AbstractProductA.s"
	@echo "... AbstractProductB.o"
	@echo "... AbstractProductB.i"
	@echo "... AbstractProductB.s"
	@echo "... ConcreteFactory1.o"
	@echo "... ConcreteFactory1.i"
	@echo "... ConcreteFactory1.s"
	@echo "... ConcreteFactory2.o"
	@echo "... ConcreteFactory2.i"
	@echo "... ConcreteFactory2.s"
	@echo "... ProductA1.o"
	@echo "... ProductA1.i"
	@echo "... ProductA1.s"
	@echo "... ProductA2.o"
	@echo "... ProductA2.i"
	@echo "... ProductA2.s"
	@echo "... ProductB1.o"
	@echo "... ProductB1.i"
	@echo "... ProductB1.s"
	@echo "... ProductB2.o"
	@echo "... ProductB2.i"
	@echo "... ProductB2.s"
	@echo "... main.o"
	@echo "... main.i"
	@echo "... main.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /root/GIT/GOF/build/debug && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

